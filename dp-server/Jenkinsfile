pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '30'))
        timeout(time: 1, unit: 'HOURS')
        timestamps()
    }
    stages {
        stage('Pooling') {
            steps {
                checkout(changelog: false, poll: true, scm:
                        [$class                           : 'GitSCM',
                         branches                         : [[name: '*/develop']],
                         doGenerateSubmoduleConfigurations: false,
                         extensions                       : [
                                 [$class: 'DisableRemotePoll'],
                                 [$class: 'PathRestriction', excludedRegions: '', includedRegions: '^dt-server/.*\n']
                         ],
                         submoduleCfg                     : [],
                         userRemoteConfigs                : [[credentialsId: 'ab6d26b4-0736-4764-bc96-556a6599ab2e', url: 'git@github.com:0xFaulty/digital-breakthrough.git']],
                         poll                             : true]
                )
            }
        }
        stage('unit test and coverage') {
            steps {
                sh './gradlew dt-server:test --stacktrace'
            }
            post {
                always {
                    publishHTML([
                            allowMissing         : false,
                            alwaysLinkToLastBuild: false,
                            keepAll              : true,
                            reportDir            : '/var/lib/jenkins/workspace/MCS/DigitalBreakthrough/dt-server/build/reports/tests/test/',
                            reportFiles          : 'index.html',
                            reportName           : 'Unit test report'
                    ])
                    jacoco()
                }
            }
        }
        stage('bootRepackage') {
            steps {
                sh './gradlew dt-server:bootRepackage --stacktrace'
            }
        }
        stage('Docker Push') {
            steps {
                sh './gradlew dt-server:dockerPush --stacktrace'
            }
        }
    }
}
