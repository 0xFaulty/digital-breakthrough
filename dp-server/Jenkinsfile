pipeline {
    agent any
    options {
        buildDiscarder(logRotator(numToKeepStr: '30'))
        timeout(time: 1, unit: 'HOURS')
        timestamps()
    }
    stages {
        stage('Pooling') {
            steps {
                checkout(changelog: false, poll: true, scm:
                        [$class                           : 'GitSCM',
                         branches                         : [[name: '*/develop']],
                         doGenerateSubmoduleConfigurations: false,
                         extensions                       : [
                                 [$class: 'DisableRemotePoll'],
                                 [$class: 'PathRestriction', excludedRegions: '', includedRegions: '^dp-server/.*\n']
                         ],
                         submoduleCfg                     : [],
                         userRemoteConfigs                : [[url: 'https://github.com/0xFaulty/digital-breakthrough.git']],
                         poll                             : true]
                )
            }
        }
        stage('Unit Tests and Coverage') {
            steps {
                sh './gradlew dp-server:test --stacktrace'
            }
            post {
                always {
                    publishHTML([
                            allowMissing         : true,
                            alwaysLinkToLastBuild: false,
                            keepAll              : true,
                            reportDir            : '${env.WORKSPACE}/DigitalBreakthrough/dp-server/build/reports/tests/test/',
                            reportFiles          : 'index.html',
                            reportName           : 'Unit test report'
                    ])
                }
            }
        }
        stage('Boot Repackage') {
            steps {
                sh './gradlew dp-server:bootJar --stacktrace'
            }
        }
        stage('Docker Push') {
            steps {
                sh './gradlew dp-server:dockerPush --stacktrace'
            }
        }
        stage('Notify Rancher') {
            steps {
                script{
                    rancher confirm: true,
                             credentialId: 'd67316a2-1b80-4a1c-bdcc-8086598b2d1a',
                             endpoint: 'http://socify.cloud:8085/v2-beta',
                             environmentId: '1a5',
                             environments: '',
                             image: 'socify.cloud:5000/dp-server',
                             ports: '',
                             service: 'Socify/digital-breakthrough-hackaton',
                             timeout: 2700
                }
            }
        }
    }
}
